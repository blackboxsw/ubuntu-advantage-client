language: python
dist: bionic

stages:
  - flake
  - build
  - integration
  - upgrade

install:
  # Required so `git describe` will definitely find a tag; see
  # https://github.com/travis-ci/travis-ci/issues/7422
  - git fetch --unshallow
  - make testdeps
script:
  - make test

matrix:
  fast_finish: true
  include:
    - if: env(UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY)
      stage: build
      name: cleanup-stale-aws-vms
      env:
          - AWS_ACCESS_KEY_ID=${UACLIENT_BEHAVE_AWS_ACCESS_KEY_ID}
          - AWS_SECRET_ACCESS_KEY=${UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY}
      install:
          - git clone https://github.com/canonical/server-test-scripts.git
          - git clone https://github.com/canonical/pycloudlib.git
          - cd pycloudlib
          - pip install -r requirements.txt
          - pip install -e .
          - cd ..
      script:
          - DATE=`date +%D`
          - >
            for region in us-east-1 us-east-2; do
                AWS_DEFAULT_REGION=${region} python3 server-test-scripts/ubuntu-advantage-client/ec2_cleanup.py -b ${DATE} || true
            done;
    - if: env(UACLIENT_BEHAVE_AZ_CLIENT_SECRET)
      stage: build
      name: cleanup-stale-azure-vms
      install:
          - git clone https://github.com/canonical/server-test-scripts.git
          - git clone https://github.com/canonical/pycloudlib.git
          - cd pycloudlib
          - pip install -r requirements.txt
          - pip install -e .
          - cd ..
      script:
          - DATE=`date +%D`
          - >
            python3 server-test-scripts/ubuntu-advantage-client/azure_cleanup.py --client-id ${UACLIENT_BEHAVE_AZ_CLIENT_ID} --client-secret ${UACLIENT_BEHAVE_AZ_CLIENT_SECRET} --subscription-id ${UACLIENT_BEHAVE_AZ_SUBSCRIPTION_ID} --tenant-id ${UACLIENT_BEHAVE_AZ_TENANT_ID} || true
    - if: env(UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY) AND env(UACLIENT_BEHAVE_CONTRACT_TOKEN)
      python: 3.7
      stage: integration
      env:
          - TOXENV=behave-awsgeneric-14.04
          - AWS_DEFAULT_REGION=us-east-2
          - AWS_ACCESS_KEY_ID=${UACLIENT_BEHAVE_AWS_ACCESS_KEY_ID}
          - AWS_SECRET_ACCESS_KEY=${UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY}
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - trusty
      install:
          - make testdeps
          - pip install boto3
          - git clone https://github.com/canonical/server-test-scripts.git
      script:
          - ./tools/run_aws_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY) AND env(UACLIENT_BEHAVE_CONTRACT_TOKEN) AND env(TRAVIS_EVENT_TYPE) = cron
      python: 3.7
      stage: integration
      env:
          - TOXENV=behave-awsgeneric-16.04
          - AWS_DEFAULT_REGION=us-east-2
          - AWS_ACCESS_KEY_ID=${UACLIENT_BEHAVE_AWS_ACCESS_KEY_ID}
          - AWS_SECRET_ACCESS_KEY=${UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY}
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - xenial
      install:
          - make testdeps
          - pip install boto3
          - git clone https://github.com/canonical/server-test-scripts.git
      script:
          - ./tools/run_aws_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY) AND env(UACLIENT_BEHAVE_CONTRACT_TOKEN) AND env(TRAVIS_EVENT_TYPE) = cron
      python: 3.7
      stage: integration
      env:
          - TOXENV=behave-awsgeneric-18.04
          - AWS_DEFAULT_REGION=us-east-2
          - AWS_ACCESS_KEY_ID=${UACLIENT_BEHAVE_AWS_ACCESS_KEY_ID}
          - AWS_SECRET_ACCESS_KEY=${UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY}
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - bionic
      install:
          - make testdeps
          - pip install boto3
          - git clone https://github.com/canonical/server-test-scripts.git
      script:
          - ./tools/run_aws_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY) AND env(UACLIENT_BEHAVE_CONTRACT_TOKEN) AND env(TRAVIS_EVENT_TYPE) = cron
      python: 3.7
      stage: integration
      env:
          - TOXENV=behave-awsgeneric-20.04
          - AWS_DEFAULT_REGION=us-east-2
          - AWS_ACCESS_KEY_ID=${UACLIENT_BEHAVE_AWS_ACCESS_KEY_ID}
          - AWS_SECRET_ACCESS_KEY=${UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY}
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - focal
      install:
          - make testdeps
          - pip install boto3
          - git clone https://github.com/canonical/server-test-scripts.git
      script:
          - ./tools/run_aws_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_AZ_CLIENT_SECRET) AND env(TRAVIS_EVENT_TYPE) = cron
      python: 3.7
      stage: integration
      env: 
          - TOXENV=behave-azurepro-14.04
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - trusty
      install:
          - make testdeps
          - git clone https://github.com/canonical/server-test-scripts.git
          - git clone https://github.com/canonical/pycloudlib.git
          - cd pycloudlib
          - pip install -r requirements.txt
          - pip install -e .
          - cd ..
      script:
          - ./tools/run_azure_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_AZ_CLIENT_SECRET)
      python: 3.7
      stage: integration
      env: 
          - TOXENV=behave-azurepro-16.04
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - xenial
      install:
          - make testdeps
          - git clone https://github.com/canonical/server-test-scripts.git
          - git clone https://github.com/canonical/pycloudlib.git
          - cd pycloudlib
          - pip install -r requirements.txt
          - pip install -e .
          - cd ..
      script:
          - ./tools/run_azure_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_AZ_CLIENT_SECRET) AND env(TRAVIS_EVENT_TYPE) = cron
      python: 3.7
      stage: integration
      env: 
          - TOXENV=behave-azurepro-18.04
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - bionic
      install:
          - make testdeps
          - git clone https://github.com/canonical/server-test-scripts.git
          - git clone https://github.com/canonical/pycloudlib.git
          - cd pycloudlib
          - pip install -r requirements.txt
          - pip install -e .
          - cd ..
      script:
          - ./tools/run_azure_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_AZ_CLIENT_SECRET) AND env(TRAVIS_EVENT_TYPE) = cron
      python: 3.7
      stage: integration
      env: 
          - TOXENV=behave-azurepro-20.04
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - focal
      install:
          - make testdeps
          - git clone https://github.com/canonical/server-test-scripts.git
          - git clone https://github.com/canonical/pycloudlib.git
          - cd pycloudlib
          - pip install -r requirements.txt
          - pip install -e .
          - cd ..
      script:
          - ./tools/run_azure_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_AZ_CLIENT_SECRET) AND env(UACLIENT_BEHAVE_CONTRACT_TOKEN) AND env(TRAVIS_EVENT_TYPE) = cron
      python: 3.7
      stage: integration
      env:
          - TOXENV=behave-azuregeneric-14.04
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - trusty
      install:
          - make testdeps
          - git clone https://github.com/canonical/server-test-scripts.git
          - git clone https://github.com/canonical/pycloudlib.git
          - cd pycloudlib
          - pip install -r requirements.txt
          - pip install -e .
          - cd ..
      script:
          - ./tools/run_azure_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_AZ_CLIENT_SECRET) AND env(UACLIENT_BEHAVE_CONTRACT_TOKEN) AND env(TRAVIS_EVENT_TYPE) = cron
      python: 3.7
      stage: integration
      env:
          - TOXENV=behave-azuregeneric-16.04
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - xenial
      install:
          - make testdeps
          - git clone https://github.com/canonical/server-test-scripts.git
          - git clone https://github.com/canonical/pycloudlib.git
          - cd pycloudlib
          - pip install -r requirements.txt
          - pip install -e .
          - cd ..
      script:
          - ./tools/run_azure_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_AZ_CLIENT_SECRET) AND env(UACLIENT_BEHAVE_CONTRACT_TOKEN) AND env(TRAVIS_EVENT_TYPE) = cron
      python: 3.7
      stage: integration
      env:
          - TOXENV=behave-azuregeneric-18.04
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - bionic
      install:
          - make testdeps
          - git clone https://github.com/canonical/server-test-scripts.git
          - git clone https://github.com/canonical/pycloudlib.git
          - cd pycloudlib
          - pip install -r requirements.txt
          - pip install -e .
          - cd ..
      script:
          - ./tools/run_azure_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_AZ_CLIENT_SECRET) AND env(UACLIENT_BEHAVE_CONTRACT_TOKEN) AND env(TRAVIS_EVENT_TYPE) = cron
      python: 3.7
      stage: integration
      env:
          - TOXENV=behave-azuregeneric-20.04
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - focal
      install:
          - make testdeps
          - git clone https://github.com/canonical/server-test-scripts.git
          - git clone https://github.com/canonical/pycloudlib.git
          - cd pycloudlib
          - pip install -r requirements.txt
          - pip install -e .
          - cd ..
      script:
          - ./tools/run_azure_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY) AND env(TRAVIS_EVENT_TYPE) = cron
      python: 3.7
      stage: integration
      env:
          - TOXENV=behave-awspro-14.04
          - AWS_DEFAULT_REGION=us-east-1
          - AWS_ACCESS_KEY_ID=${UACLIENT_BEHAVE_AWS_ACCESS_KEY_ID}
          - AWS_SECRET_ACCESS_KEY=${UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY}
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - trusty
          - xenial
          - bionic
          - focal
      install:
          - make testdeps
          - pip install boto3
          - git clone https://github.com/canonical/server-test-scripts.git
      script:
          - ./tools/run_aws_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY) AND env(TRAVIS_EVENT_TYPE) = cron
      stage: integration
      python: 3.7
      env:
          - TOXENV=behave-awspro-16.04
          - AWS_DEFAULT_REGION=us-east-1
          - AWS_ACCESS_KEY_ID=${UACLIENT_BEHAVE_AWS_ACCESS_KEY_ID}
          - AWS_SECRET_ACCESS_KEY=${UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY}
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - trusty
          - xenial
          - bionic
          - focal
      install:
          - make testdeps
          - pip install boto3
          - git clone https://github.com/canonical/server-test-scripts.git
      script:
          - ./tools/run_aws_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY) AND env(TRAVIS_EVENT_TYPE) = cron
      stage: integration
      python: 3.7
      env:
          - TOXENV=behave-awspro-18.04
          - AWS_DEFAULT_REGION=us-east-1
          - AWS_ACCESS_KEY_ID=${UACLIENT_BEHAVE_AWS_ACCESS_KEY_ID}
          - AWS_SECRET_ACCESS_KEY=${UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY}
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - trusty
          - xenial
          - bionic
          - focal
      install:
          - make testdeps
          - pip install boto3
          - git clone https://github.com/canonical/server-test-scripts.git
      script:
          - ./tools/run_aws_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY) AND env(TRAVIS_EVENT_TYPE) = cron
      stage: integration
      python: 3.7
      env:
          - TOXENV=behave-awspro-20.04
          - AWS_DEFAULT_REGION=us-east-1
          - AWS_ACCESS_KEY_ID=${UACLIENT_BEHAVE_AWS_ACCESS_KEY_ID}
          - AWS_SECRET_ACCESS_KEY=${UACLIENT_BEHAVE_AWS_SECRET_ACCESS_KEY}
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - trusty
          - xenial
          - bionic
          - focal
      install:
          - make testdeps
          - pip install boto3
          - git clone https://github.com/canonical/server-test-scripts.git
      script:
          - ./tools/run_aws_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_CONTRACT_TOKEN)
      python: 3.7
      stage: integration
      env:
          - TOXENV=behave-lxd-14.04
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - trusty
      script:
          - ./tools/run_lxd_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_CONTRACT_TOKEN)
      python: 3.7
      stage: integration
      env:
          - TOXENV=behave-lxd-16.04
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - xenial
      script:
          - ./tools/run_lxd_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_CONTRACT_TOKEN)
      python: 3.7
      stage: integration
      env:
          - TOXENV=behave-lxd-18.04
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - bionic
      script:
          - ./tools/run_lxd_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_CONTRACT_TOKEN)
      python: 3.7
      stage: integration
      env:
          - TOXENV=behave-lxd-20.04
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - focal
      script:
          - ./tools/run_lxd_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_CONTRACT_TOKEN) AND env(TRAVIS_EVENT_TYPE) = cron
      python: 3.7
      stage: upgrade
      env:
          - TOXENV=behave-upgrade-14.04
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - trusty
      script:
          - ./tools/run_lxd_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_CONTRACT_TOKEN) AND env(TRAVIS_EVENT_TYPE) = cron
      python: 3.7
      stage: upgrade
      env:
          - TOXENV=behave-upgrade-16.04
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - xenial
      script:
          - ./tools/run_lxd_travis_integration_tests.sh
    - if: env(UACLIENT_BEHAVE_CONTRACT_TOKEN) AND env(TRAVIS_EVENT_TYPE) = cron
      python: 3.7
      stage: upgrade
      env:
          - TOXENV=behave-upgrade-18.04
          - UACLIENT_BEHAVE_DEBS_PATH=deb-artifacts
      workspaces:
        use:
          - bionic
      script:
          - ./tools/run_lxd_travis_integration_tests.sh
    - env:
        PACKAGE_BUILD_SERIES=trusty
      stage: build
      install:
        - make travis-deb-install
      workspaces:
        create:
          name: trusty
          paths:
            - trusty-debs
      script:
        - make travis-deb-script
        - mkdir trusty-debs
        - cp ubuntu-advantage-tools-trusty.deb trusty-debs
        - cp ubuntu-advantage-tools-pro-trusty.deb trusty-debs
        - ls trusty-debs
    - env:
        PACKAGE_BUILD_SERIES=xenial
      stage: build
      workspaces:
        create:
          name: xenial
          paths:
            - xenial-debs
      install:
        - make travis-deb-install
      script:
        - make travis-deb-script
        - mkdir xenial-debs
        - cp ubuntu-advantage-tools-xenial.deb xenial-debs
        - cp ubuntu-advantage-tools-pro-xenial.deb xenial-debs
        - ls xenial-debs
    - env:
        PACKAGE_BUILD_SERIES=bionic
      stage: build
      workspaces:
        create:
          name: bionic
          paths:
            - bionic-debs
      install:
        - make travis-deb-install
      script:
        - make travis-deb-script
        - mkdir bionic-debs
        - cp ubuntu-advantage-tools-bionic.deb bionic-debs
        - cp ubuntu-advantage-tools-pro-bionic.deb bionic-debs
        - ls bionic-debs
    - env:
        PACKAGE_BUILD_SERIES=focal
      stage: build
      workspaces:
        create:
          name: focal
          paths:
            - focal-debs
      install:
        - make travis-deb-install
      script:
        - echo $TRAVIS_PULL_REQUEST
        - make travis-deb-script
        - mkdir focal-debs
        - cp ubuntu-advantage-tools-focal.deb focal-debs
        - cp ubuntu-advantage-tools-pro-focal.deb focal-debs
        - ls focal-debs
    - python: 3.4
      stage: flake
      env: TOXENV=py3-trusty,flake8-trusty
      dist: trusty
      script:
        - echo BBSW $TRAVIS_EVENT_TYPE
        - make test
    - python: 3.5
      stage: flake
      env: TOXENV=py3-xenial,flake8-xenial
      dist: xenial
    - python: 3.6
      stage: flake
      env: TOXENV=py3-bionic,flake8-bionic
    - python: 3.8
      stage: flake
      env: TOXENV=py3,flake8
    - python: 3.7
      stage: flake
      env: TOXENV=mypy
    - python: 3.7
      stage: flake
      env: TOXENV=black
